该目录用于前端网页设计:
技术栈：使用 Vue3 + TypeScript 开发，组件统一采用 Composition API 编写，确保类型安全与代码可维护性。 
状态管理：使用 Pinia 进行全局状态管理，按功能模块划分 store，保持状态逻辑清晰，存储用户信息和训练数据。 
路由导航：使用 Vue Router 管理页面导航，采用 history 模式，路由配置模块化，遵循约定优于配置。 
组件风格：遵循扁平化风格，保持界面简洁美观，组件命名和文件结构统一，如 components/PlanEditor.vue。 
图表展示：使用 ECharts 绘制训练数据图表，如热量消耗趋势图和体脂率变化曲线图，根据后端数据实时更新视图。
数据交互：通过 Axios 调用后端的 RESTful API，实现训练计划、用户数据等的 CRUD 操作，处理好加载状态和错误提示。
操作提示：提供友好的交互提示和教程向导 (如 Tooltip、步骤指引)，帮助用户快速理解编辑流程。